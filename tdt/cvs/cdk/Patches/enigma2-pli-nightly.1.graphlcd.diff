diff -Nur '--exclude=.git' '--exclude=tuxtxt' enigma2-nightly.org/lib/gdi/lcd.h enigma2-nightly.patched/lib/gdi/lcd.h
--- enigma2-nightly.org/lib/gdi/lcd.h	2011-12-08 23:44:45.212475695 +0100
+++ enigma2-nightly.patched/lib/gdi/lcd.h	2011-12-08 19:23:24.000000000 +0100
@@ -5,17 +5,6 @@
 #include <lib/gdi/esize.h>
 #include <lib/gdi/erect.h>
 
-#ifdef __sh__
-#include <glcdgraphics/bitmap.h>
-#include <glcdgraphics/glcd.h>
-#include <glcdgraphics/image.h>
-#include <glcddrivers/config.h>
-#include <glcddrivers/driver.h>
-#include <glcddrivers/drivers.h>
-#include <glcdgraphics/extformats.h>
-#include <byteswap.h>
-#endif
-
 #define LCD_CONTRAST_MIN 0
 #define LCD_CONTRAST_MAX 63
 #define LCD_BRIGHTNESS_MIN 0
@@ -60,15 +49,6 @@
 	unsigned char inverted;
 	bool flipped;
 	int is_oled;
-
-#ifdef __sh__
-	GLCD::cDriver * lcd;
-	GLCD::cBitmap * bitmap;
-	int displayNumber;
-	int depth;
-	int width, height;
-#endif
-
 #ifdef SWIG
 	eDBoxLCD();
 	~eDBoxLCD();
diff -Nur '--exclude=.git' '--exclude=tuxtxt' enigma2-nightly.org/main/Makefile.am enigma2-nightly.patched/main/Makefile.am
--- enigma2-nightly.org/main/Makefile.am	2011-12-08 23:44:45.212475695 +0100
+++ enigma2-nightly.patched/main/Makefile.am	2011-12-08 19:23:24.000000000 +0100
@@ -58,8 +58,6 @@
 
 enigma2_LDFLAGS = -Wl,--export-dynamic
 
-enigma2_LDADD += -lglcddrivers -lglcdgraphics -lglcdskin
- 
 if HAVE_GIT_DIR
 GIT_DIR = $(top_srcdir)/.git
 GIT = git --git-dir=$(GIT_DIR)
--- enigma2-nightly.org/lib/gdi/glcddc.h﻿  2011-12-11 15:25:31.276723246 +0100
+++ enigma2-nightly.patched/lib/gdi/glcddc.h  2011-12-11 16:42:06.291558030 +0100
@@ -11,9 +11,6 @@
 	int update;
 	void exec(const gOpcode *opcode);
 	gSurface surface;
-#ifdef __sh__    
-	struct timespec last_update;
-#endif
 public:
 	gLCDDC();
 	~gLCDDC();
--- enigma2-nightly.org/lib/gdi/lcd.cpp  2012-03-23 19:50:54.000000000 +0100
+++ enigma2-nightly.patched/lib/gdi/lcd.cpp﻿﻿  2012-03-23 23:41:14.000000000 +0100
@@ -60,8 +60,6 @@
 }
 #endif
 
-#ifndef __sh__
-
 eDBoxLCD::eDBoxLCD()
 {
 	int xres=132, yres=64, bpp=8;
@@ -304,158 +301,3 @@
 	}
 #endif
 }
-
-#else
-
-void eDBoxLCD::setFlipped(bool onoff)
-{
-	flipped = onoff;
-	update();
-}
-
-/* **************************************************************** */
-/* Pearl LCD */
-
-eDBoxLCD::eDBoxLCD()
-{
-	eDebug("eDBoxLCD::eDBoxLCD >");
-
-	displayNumber = 0;
-	is_oled = 1;
-
-	instance=this;
-
-	if (GLCD::Config.Load("/etc/graphlcd.conf") == false)
-	{
-		eDebug("Error loading config file!\n");
-		return;
-	}
-	if (GLCD::Config.driverConfigs.size() <= 0)
-	{
-		eDebug("ERROR: No displays specified in config file!\n");
-	}
-
-	GLCD::Config.driverConfigs[displayNumber].upsideDown ^= 0;
-	GLCD::Config.driverConfigs[displayNumber].invert ^= 0;
-
-	lcd = GLCD::CreateDriver(GLCD::Config.driverConfigs[displayNumber].id, &GLCD::Config.driverConfigs[displayNumber]);
-
-	if (!lcd)
-	{
-		eDebug("ERROR: Failed creating display object\n");
-		return;
-	}
-	if (lcd->Init() != 0)
-	{
-#if 0
-	// Returning an error here will break the code at various other places
-		eDebug("ERROR: Failed initializing display\n");
-		delete lcd;
-		lcd = NULL;
-		return;
-#endif
-	}
-	lcd->SetBrightness(GLCD::Config.driverConfigs[displayNumber].brightness);
-
-	lcd->GetFeature((std::string) "depth", depth);
-	width = GLCD::Config.driverConfigs[displayNumber].width;
-	height = GLCD::Config.driverConfigs[displayNumber].height;
-
-	eDebug("config -> (w %d, h %d)", width, height);
-
-	bitmap = new GLCD::cBitmap(width, height);
-	bitmap->Clear();
-
-	lcd->SetScreen(bitmap->Data(), bitmap->Width(), bitmap->Height());
-	lcd->Refresh(true);
-
-	lcdfd = 1; //needed for detected()
-	setSize(width, height, depth);
-
-	eDebug("eDBoxLCD::eDBoxLCD (w %d, h %d, depth %d)<", width, height, depth);
-}
-
-void eDBoxLCD::setInverted(unsigned char inv)
-{
-	eDebug("eDBoxLCD::setInverted");
-	inverted = inv;
-	update();
-}
-
-int eDBoxLCD::setLCDContrast(int contrast)
-{
-	eDebug("[LCD] setLCDContrast not supported");
-	return(0);
-}
-
-int eDBoxLCD::setLCDBrightness(int brightness)
-{
-	eDebug("eDBoxLCD::setLCDBrightness");
-/* fixme range check */
-	lcd->SetBrightness(brightness);
-	return(0);
-}
-
-eDBoxLCD::~eDBoxLCD()
-{
-	eDebug("eDBoxLCD::~eDBoxLCD");
-
-/* konfetti: there is an error in graphlcd (I reported it alread)
- * ->InitSingleDisplay returns 0 if dpf_open fails, which leads
- * to a crash here!
-	if (lcd)
-	{
-		lcd->DeInit();
-		delete lcd;
-	}
-	if (bitmap)
-		delete bitmap;
-*/
-}
-
-eDBoxLCD *eDBoxLCD::getInstance()
-{
-	eDebug("eDBoxLCD::getInstance");
-	return instance;
-}
-
-void eDBoxLCD::update()
-{
-	if (lcdfd == 1)
-	{
-
-		bitmap->Clear();
-
-		for (int x = 0; x < width; x++)
-			for (int y = 0; y < height; y++)
-			{
-				__u16 *buf16  = (__u16*) _buffer;
-
-#if BYTE_ORDER == LITTLE_ENDIAN
-				__u16 col16   = bswap_16(*((__u16*)(((__u16*)buf16) + y * width + x)));
-#else
-				__u16 col16   = *((__u16*)(((__u16*)buf16) + y  * width + x));
-#endif
-				__u8 red, green, blue, alpha; 
-				__u32 color32;
-
-				/* BBBBB GGGGGG RRRRR */
-				blue  = ((col16 & 0xF800) >> 11) * ( 255 / 31);
-				green = ((col16 & 0x7E0) >> 5) * (255 / 63);
-				red   = (col16 & 0x1f) * (255 / 31);
-				alpha = 255;
-
-				color32 = alpha << 24 | red << 16 | green << 8 | blue;
-
-				if (inverted)
-					color32 = 0xFFFFFF - color32;
-
-				bitmap->DrawPixel(x, y, color32);
-			}
-		lcd->SetScreen(bitmap->Data(), bitmap->Width(), bitmap->Height());
-		lcd->Refresh(false); /* partial update */
-	}
-}
-
-#endif
-
--- enigma2-nightly.org/lib/gdi/glcddc.cpp  2012-03-23 19:50:54.000000000 +0100
+++ enigma2-nightly.patched/lib/gdi/glcddc.cpp  2012-03-23 22:23:20.000000000 +0100
@@ -5,23 +5,6 @@
 
 gLCDDC *gLCDDC::instance;
 
-#ifdef __sh__
-static inline int time_after(struct timespec oldtime, uint32_t delta_ms)
-{
-	// calculate the oldtime + add on the delta
-	uint64_t oldtime_ms = (oldtime.tv_sec * 1000) + (oldtime.tv_nsec / 1000000);
-	oldtime_ms += delta_ms;
-
-	// calculate the nowtime
-	struct timespec nowtime;
-	clock_gettime(CLOCK_MONOTONIC, &nowtime);
-	uint64_t nowtime_ms = (nowtime.tv_sec * 1000) + (nowtime.tv_nsec / 1000000);
-
-	// check
-	return nowtime_ms > oldtime_ms;
-}
-#endif
-
 gLCDDC::gLCDDC()
 {
 	lcd = new eDBoxLCD();
@@ -39,20 +22,10 @@
 	surface.clut.data=0;
 
 	m_pixmap = new gPixmap(&surface);
-
-#ifdef __sh__
-	clock_gettime(CLOCK_MONOTONIC, &last_update);
-#endif
 }
 
 gLCDDC::~gLCDDC()
 {
-#ifndef __sh__
-//konfetti: not sure why, but calling the destructor if external lcd (pearl)
-//is selected e2 crashes. this is also true if the destructor does not contain
-//any code !!!
-	delete lcd;
-#endif
 	instance=0;
 }
 
@@ -71,17 +45,8 @@
 		break;
 #endif
 	case gOpcode::flush:
-#ifdef __sh__
-//		if (time_after(last_update, 1500) && update)
-		if (update)
-		{
-			lcd->update();
-			clock_gettime(CLOCK_MONOTONIC, &last_update);
-		}
-#else
 //		if (update)
 			lcd->update();
-#endif
 	default:
 		gDC::exec(o);
 		break;
